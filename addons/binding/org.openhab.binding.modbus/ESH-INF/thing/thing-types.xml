<?xml version="1.0" encoding="UTF-8"?>
<thing:thing-descriptions bindingId="modbus" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:thing="http://eclipse.org/smarthome/schemas/thing-description/v1.0.0"
	xsi:schemaLocation="http://eclipse.org/smarthome/schemas/thing-description/v1.0.0 http://eclipse.org/smarthome/schemas/thing-description-1.0.0.xsd">

	<thing-type id="writeDefinition">
		<supported-bridge-type-refs>
			<bridge-type-ref id="tcp" />
			<!-- <bridge-type-ref id="serial" /> -->
		</supported-bridge-type-refs>
		<label>Modbus write definition</label>
		<channels>
			<channel id="switch" typeId="switch-type" />
			<channel id="number" typeId="number-type" />
			<channel id="string" typeId="string-type" />
		</channels>
		<config-description>
			<!-- where to write -->
			<parameter name="id" type="integer">
				<label>Id</label>
				<description>Slave id. Also known as station address or unit identifier.</description>
				<default>1</default>
			</parameter>
			<parameter name="start" type="integer">
				<label>Address</label>
				<description>Start address of the register and/or coils to write</description>
				<default>0</default>
			</parameter>
			<parameter name="type" type="text" required="true">
				<label>Type</label>
				<description>Type of data to write</description>
				<options>
					<option value="coil">coil, or digital out (DO)</option>
					<option value="holding">holding register</option>
				</options>
			</parameter>

			<!-- what to write -->
			<parameter name="trigger" type="text">
				<label>trigger</label>
				<description>Process command only if the command
    matches this string. Use asterisk (*) to match all</description>
				<default>*</default>
			</parameter>

			<!-- how to write: transform and valuetype -->
			<parameter name="transform" type="text">
				<label>transform</label>
				<description>Transformation to apply to received commands.
    Use "default" to communicate that no transformation is done and value should be passed as is.
    Use SERVICENAME(ARG) to use transformation service.
    Any other value than the above types will be interpreted as static text, in which case the actual content of the command 
         value is ignored.</description>
				<default>default</default>
			</parameter>
			<parameter name="valueType" type="text" required="true">
				<label>Value type</label>
				<description>How data is serialized to modbus</description>
				<options>
					<option value="int32">32bit integer (0/1). Only applicable to registers.</option>
					<option value="int16">16bit integer (0/1). Only applicable to registers.</option>
				</options>
			</parameter>
		</config-description>
	</thing-type>
	
	<thing-type id="readDefinition">
        <supported-bridge-type-refs>
            <bridge-type-ref id="poller" />
        </supported-bridge-type-refs>
        <label>Modbus read definition</label>
        <channels>
            <channel id="switch" typeId="switch-type" />
            <channel id="number" typeId="number-type" />
            <channel id="string" typeId="string-type" />
        </channels>
        <config-description>
            <!-- what to read -->
            <parameter name="start" type="integer">
                <label>Address</label>
                <description>Start address of the register and/or to read</description>
                <default>0</default>
            </parameter>
            <parameter name="trigger" type="text">
                <label>trigger</label>
                <description>Update channel values only if the polled
    value matches this after transformation.
         Use asterisk 
    (*) to match all</description>
                <default>*</default>
            </parameter>

            <!-- how to write: transform and valuetype -->
            <parameter name="transform" type="text">
                <label>transform</label>
                <description>Transformation to apply to received commands and polled state.
    Use "default" to communicate that no transformation is done and value should be passed as is.
    Use SERVICENAME(ARG) to use transformation service.
    Any other value than the above types will be interpreted as static text, in which case the actual content of the polled 
         value is ignored.</description>
                <default>default</default>
            </parameter>
            <parameter name="valueType" type="text" required="true">
                <label>Value type</label>
                <description>How data is read from modbus</description>
                <options>
                    <option value="int32">32bit integer (0/1). Only applicable to registers.</option>
                    <option value="int16">16bit integer (0/1). Only applicable to registers.</option>
                </options>
            </parameter>
        </config-description>
    </thing-type>
    
    <thing-type id="readWriteDefinition">
        <label>Modbus read-write definition</label>
        <channels>
            <channel id="switch" typeId="switch-type" />
            <channel id="number" typeId="number-type" />
            <channel id="string" typeId="string-type" />
        </channels>
        <config-description>
            <parameter name="readDefinitions" type="text">
                <label>Read definitions</label>
                <description>Read definitions to use, separated with comma (,). All of the listed read definitions can update this thing's channels</description>
            </parameter>
            <parameter name="writeDefinitions" type="text">
                <label>Write definitions</label>
                <description>Write definitions to use, separated with comma (,). When a command is received in this thing's items, all write definitions are processed.</description>
            </parameter>
        </config-description>
    </thing-type>


	<channel-type id="switch-type">
		<item-type>Switch</item-type>
		<label>Switch</label>
		<description>Switch item channel</description>
	</channel-type>
    <channel-type id="contact-type">
        <item-type>Contact</item-type>
        <label>Contact</label>
        <description>Contact item channel</description>
    </channel-type>
    <channel-type id="datetime-type">
        <item-type>DateTime</item-type>
        <label>DateTime</label>
        <description>DateTime item channel</description>
    </channel-type>
    <channel-type id="dimmer-type">
        <item-type>Dimmer</item-type>
        <label>Dimmer</label>
        <description>Dimmer item channel</description>
    </channel-type>
    <channel-type id="rollershutter-type">
        <item-type>Rollershutter</item-type>
        <label>Rollershutter</label>
        <description>Rollershutter item channel</description>
    </channel-type>
    <channel-type id="string-type">
        <item-type>String</item-type>
        <label>String</label>
        <description>String item channel</description>
    </channel-type>
    <channel-type id="number-type">
        <item-type>Number</item-type>
        <label>Register value</label>
        <description>Number item channel</description>
        <config-description></config-description>
    </channel-type>


	<!-- - Sample Thing Type -->

	<!-- <thing-type id="modbusThing"> -->
	<!-- <supported-bridge-type-refs> -->
	<!-- <bridge-type-ref id="poller" /> -->
	<!-- </supported-bridge-type-refs> -->


	<!-- <label>Modbus Data Thing</label> -->
	<!-- <description>Thing that for accessing polled MODBUS data, and/or writing to MODBUS</description> -->

	<!-- <channels> -->
	<!-- <channel id="switch" typeId="switch-type" /> -->
	<!-- <channel id="raw" typeId="raw-type" /> -->
	<!-- - TODO: add the rest -->

	<!-- </channels> -->
	<!-- <config-description> -->
	<!-- <parameter name="trigger" type="text"> <label>trigger</label> <description>Update channel values only if the polled -->
	<!-- value matches this after transformation. With received commands only commands matching this trigger are processed. 
		Use asterisk -->
	<!-- (*) to match all</description> <default>*</default> </parameter> -->
	<!-- <parameter name="transform" type="text"> -->
	<!-- <label>transform</label> -->
	<!-- <description>Transformation to apply to received commands and polled state. -->
	<!-- Use "default" to communicate that no transformation is done and value should be passed as is. -->
	<!-- Use SERVICENAME(ARG) to use transformation service. -->
	<!-- Any other value than the above types will be interpreted as static text, in which case the actual content of the command/polled 
		value is ignored.</description> -->
	<!-- <default>default</default> -->
	<!-- </parameter> -->
	<!-- <parameter name="updateUnchangedItems" type="boolean"> -->
	<!-- <label>updateUnchangedItems</label> -->
	<!-- <description>Whether to update channels even if the channel value did not change</description> -->
	<!-- </parameter> -->

	<!-- </config-description> -->


	<!-- </thing-type> -->

	<!-- TODO: how to have float32 etc. parsing rules here? Would they be in thing definition? -->



	<!-- <channel-type id="raw-type"> -->
	<!-- <item-type>Number</item-type> -->
	<!-- <label>Register value</label> -->
	<!-- <description>Number item channel</description> -->
	<!-- <config-description> -->
	<!-- <parameter name="index" type="integer" multiple="true"> -->
	<!-- <label>Start</label> -->
	<!-- <description>Adress of the register, coil, or discrete input to poll. Input as zero-based index number.</description> -->
	<!-- <default>0</default> -->
	<!-- </parameter> -->
	<!-- </config-description> -->
	<!-- </channel-type> -->



</thing:thing-descriptions>
